trigger: none
pr: none

jobs:
- job: linux

  workspace:
    clean: all

  timeoutInMinutes: 180

  pool: default

  steps:
    - bash: |
        set -o errexit
        python3 --version
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==1.10.0
        pip3 install twine
      displayName: Install dependencies
    - bash: |
        #sed -i 's/name\=\"triton\"/name="triton-nightly"/g' python/setup.py
        export LATEST_DATE=$(git show -s --format=%ci `git rev-parse HEAD` | cut -d ' ' -f 1 | sed 's/-//g')
        sed -i -r "s/version\=\"(.*)\"/version=\"\1-dev"$LATEST_DATE"\"/g" python/setup.py
        echo "" >> python/setup.cfg
        echo "[build_ext]" >> python/setup.cfg
        echo "base-dir=/project" >> python/setup.cfg
      displayName: Patch setup.py
    - bash: |
        export CIBW_MANYLINUX_X86_64_IMAGE="manylinux_2_24"
        export CIBW_BEFORE_BUILD="pip install cmake; echo 'deb http://deb.debian.org/debian testing main' >> /etc/apt/sources.list; apt-get update -y; apt-get install -y g++ llvm-11-dev;"
        # export CIBW_BEFORE_BUILD="pip install cmake"
        export CIBW_SKIP="{cp,pp}35-*"
        export CIBW_BUILD="{cp,pp}3*-manylinux_x86_64"
        export CIBW_REPAIR_WHEEL_COMMAND="auditwheel repair -plat manylinux_2_24_x86_64 -w {dest_dir} {wheel}"
        python3 -m cibuildwheel python --output-dir wheelhouse
      displayName: Build wheels
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}
    - bash: |
        python3 -m twine upload wheelhouse/* --skip-existing -u $(PYPI_USERNAME) -p $(PYPI_PASSWORD) 
      displayName: Upload wheels to PyPI