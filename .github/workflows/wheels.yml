name: Wheels
on:
  pull_request:
    types: [opened, reopened]
  schedule:
    - cron: "0 8 * * *"

permissions: read-all

jobs:

  Build-Wheels:
    timeout-minutes: 60

    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14]
    permissions:
      id-token: write
      contents: read

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      # The LATEST_DATE here should be kept in sync with the one in Patch setup.py
      - id: check-version
        name: Check latest version
        run: |
          export PACKAGE_DATE=$(python3 -m pip install --user --index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/Triton-Nightly/pypi/simple/ --dry-run triton-nightly== |& grep -oP '(?<=, )[0-9\.]+dev[0-9]+(?=\))' | grep -oP '(?<=dev)[0-9]+')
          export LATEST_DATE=$(TZ=UTC0 git show --quiet --date='format-local:%Y%m%d%H%M%S' --format="%cd")
          if cmp -s <(echo $PACKAGE_DATE) <(echo $LATEST_DATE); then
            echo "new_commit=false" >> "$GITHUB_OUTPUT"
          else
            echo "new_commit=true" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/setup-python@v5
        with:
          python-version: '3.*' 

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.19.2

      - name: Build wheels
        if: ${{ steps.check-version.outputs.new_commit == 'true' }}
        run: |
          export LATEST_DATE=$(TZ=UTC0 git show --quiet --date='format-local:%Y%m%d%H%M%S' --format="%cd")
          # Pass MAX_JOBS=4 because, at time of writing, the VM "only" has 32GB
          # of RAM and OOMs while building if we give it the default number of
          # workers (2 * NUM_CPUs).
          export CIBW_ENVIRONMENT="MAX_JOBS=4 \
                  TRITON_WHEEL_NAME=triton-nightly \
                  TRITON_WHEEL_VERSION_SUFFIX=-$LATEST_DATE \
                  TRITON_BUILD_WITH_CLANG_LLD=1"
          export CIBW_MANYLINUX_X86_64_IMAGE="quay.io/pypa/manylinux_2_28_x86_64:latest"
          #export CIBW_MANYLINUX_PYPY_X86_64_IMAGE="quay.io/pypa/manylinux_2_28_x86_64:latest"
          # many_linux_2_28 image comes with GCC 12.2.1, but not clang.
          # With this install, it gets clang 16.0.6.
          #export CIBW_BEFORE_ALL="dnf install clang lld -y";
          export CIBW_BUILD="cp3*-macosx_arm64"
          python3 -m cibuildwheel python --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl